C51 COMPILER V9.59.0.0   HELLO                                                             11/20/2018 12:50:39 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE HELLO
OBJECT MODULE PLACED IN HELLO.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE HELLO.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <REG52.H>                                              
   2          #include <stdio.h>
   3          #include <math.h>
   4          #include <stdio.h>
   5          #include <stdlib.h>
   6          unsigned int counter0=0;
   7          
   8          char key[10] = {
   9            '.','t','i','e','5','R','o','n','a','l'};
  10          unsigned char  start=1;
  11          unsigned long ans[9] ;
  12          unsigned long ans2[9];
  13          unsigned int test[9];
  14          //unsigned int Btest[9];
  15          unsigned char  idx= 0;
  16          unsigned long DA = 0 ;
  17          unsigned long DB= 0 ;
  18          unsigned char c = 0;
  19          sbit trainAndTest =P0^1;
  20          sbit current = P0^0;
  21          sbit LED=P1^0;
  22          unsigned char ledDelay=0;
  23            void msdelay(unsigned int value){
  24   1       
  25   1      unsigned int x,y;
  26   1      for(x=0;x<value;x++)
  27   1      for(y=0;y<1275;y++);
  28   1      }
  29          void timer0_isr(void) interrupt 1 {
  30   1      if(ledDelay==1){
  31   2          LED=!LED;
  32   2            LED=!LED;
  33   2      }
  34   1      TH0=0xFC;
  35   1      TL0=0x66;
  36   1      TF0 = 0; // Reset the interrupt request
  37   1      counter0+=1;
  38   1      }
  39          
  40          void main (void) {
  41   1          SCON  = 0x50;           /* SCON: mode 1, 8-bit UART, enable rcvr      */
  42   1          TMOD |= 0x21;               /* TMOD: timer 1, mode 2, 8-bit reload        */
  43   1          TH1   = 0xF3;                /* TH1:  reload value for 1200 baud @ 16MHz   */
  44   1          TR1   = 1;                  /* TR1:  timer 1 run                          */
  45   1          TI    = 1;                  /* TI:   set TI to send first char of UART    */
  46   1          EA=1;
  47   1          ET0=1;
  48   1          TH0=0xFC;
  49   1          TL0=0x66;
  50   1          P0=0xFF;
  51   1          
  52   1        while (trainAndTest==0) {
  53   2          char x;
  54   2              //printf("phase 1");
  55   2          if(RI){
C51 COMPILER V9.59.0.0   HELLO                                                             11/20/2018 12:50:39 PAGE 2   

  56   3             x=SBUF;
  57   3            RI=0;
  58   3            //printf("x is %c key of %d is %c \n",x,idx,key[idx]);
  59   3          }
  60   2          
  61   2        if(start==1 && x=='.'){
  62   3          //printf("case . \n");
  63   3          counter0=0;
  64   3          TR0=1;
  65   3          start=0;
  66   3          idx++;
  67   3          
  68   3        }
  69   2        else if(x==key[idx]){
  70   3          //printf("case normal \n");
  71   3          if(current==0)
  72   3          ans[(idx-1)%10]+=counter0;
  73   3          if(current==1)
  74   3          ans2[(idx-1)%10]+=counter0;
  75   3          //printf("counter between %c and %c is %d \n",key[idx-1],key[idx],counter0);
  76   3          TR0=0;
  77   3          counter0=0;
  78   3          TR0=1;
  79   3          idx++;
  80   3          //printf("next letter is %c \n",key[idx]);
  81   3        }
  82   2        if(idx%10==0 && idx!=0){
  83   3          start=1;
  84   3          TR0=0;
  85   3          idx=0;
  86   3          counter0=0;
  87   3          c++;
  88   3        //  printf("counter of words is now %d \n",c);
  89   3          if(c>=1 && current==0){
  90   4            current=1;
  91   4            idx=0;
  92   4            counter0=0;
  93   4            TR0=0;
  94   4            c=0;
  95   4          //  printf("current:%d \n",current);
  96   4          }
  97   3          else if(c>=1 && current==1){
  98   4            start=1;
  99   4            idx=0;
 100   4            counter0=0;
 101   4            TR0=0;
 102   4            trainAndTest=1;
 103   4          
 104   4          }
 105   3        }
 106   2      }
 107   1      
 108   1      while(idx<9){
 109   2          ans[idx]=ans[idx]/5;
 110   2          idx++;
 111   2        }
 112   1      idx=0;
 113   1      while(idx<9){
 114   2          ans2[idx]=ans2[idx]/5;
 115   2          idx++;
 116   2        }
 117   1      idx=0;
C51 COMPILER V9.59.0.0   HELLO                                                             11/20/2018 12:50:39 PAGE 3   

 118   1      //current = rand()% 1;
 119   1      while(trainAndTest==1){
 120   2        
 121   2          char x;
 122   2          //printf("p2 \n");
 123   2          if(RI){
 124   3             x=SBUF;
 125   3            RI=0;
 126   3            //printf("x is %c key of %d is %c \n",x,idx,key[idx]);
 127   3          }
 128   2        if(start==1 && x=='.'){
 129   3        //  printf("case . \n");
 130   3          counter0=0;
 131   3          TR0=1;
 132   3          start=0;
 133   3          idx++;
 134   3          
 135   3        }
 136   2        else if(x==key[idx]){
 137   3          //printf("case normal \n");
 138   3          test[(idx)]+=counter0;
 139   3          //printf("counter between %c and %c is %d \n",key[idx-1],key[idx],counter0);
 140   3          TR0=0;
 141   3          counter0=0;
 142   3          TR0=1;
 143   3          idx++;
 144   3          //printf("next letter is %c \n",key[idx]);
 145   3        }
 146   2        //else{
 147   2          //idx=0;
 148   2        //  counter0=0;
 149   2        //  TR0=0;
 150   2        //}
 151   2        if(idx==9){
 152   3          
 153   3          unsigned char i;
 154   3          TR0=0;
 155   3          for (i = 0; i < 9; i++){
 156   4            DA=DA+((test[i]-ans[i])*(test[i]-ans[i]));
 157   4          }
 158   3          //DA=sqrt(DA);
 159   3          for (i = 0; i < 9; i++){
 160   4            DB=DB+((test[i]-ans2[i])*(test[i]-ans2[i]));
 161   4          }
 162   3          //DB=sqrt(DB);
 163   3          if(DB>DA){
 164   4            LED=!LED;
 165   4            msdelay(300);
 166   4            LED=!LED;
 167   4          }
 168   3          else{
 169   4            LED=!LED;
 170   4              msdelay(300);
 171   4            LED=!LED;
 172   4              msdelay(1000);
 173   4            LED=!LED;
 174   4              msdelay(300);
 175   4            LED=!LED;
 176   4            //TR0=0;
 177   4            //ledDelay=1;
 178   4            //TH0=0xFF;
 179   4            //TL0=0xFF;
C51 COMPILER V9.59.0.0   HELLO                                                             11/20/2018 12:50:39 PAGE 4   

 180   4            //TR0=1;
 181   4            //LED=!LED;
 182   4          }
 183   3          TR0=0;
 184   3          idx=0;
 185   3          counter0=0;
 186   3          
 187   3      
 188   3      }
 189   2      
 190   2          
 191   2      
 192   2        }
 193   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    870    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    114       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
